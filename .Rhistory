y2$codings
y2$rawCodings
unlist(y2$codings)
unique(unlist(y2$codings))
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
x2 <- readLines("B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena/second-test-file.rock");
y2 <- parse_source(x2);
y2
source('B:/Data/R/rock/R/parse_source.R')
x2 <- readLines("B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena/second-test-file.rock");
y2 <- parse_source(x2);
y2
y2$sourceDf
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$parsedSources[[1]]
z$parsedSources[[2]]
names(y2$sourceDf)
x2 <- readLines("B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena/second-test-file.rock");
y2 <- parse_source(x2);
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$parsedSources[[2]]
z$parsedSources[[2]]$sourceDf
z$parsedSources[[2]]$sourceDf$caseId
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$parsedSources[[2]]$sourceDf$caseId
z$parsedSources[[2]]$arguments$idRegexes
names(z$parsedSources[[2]]$arguments$idRegexes)
names(z$parsedSources[[2]]$arguments$idRegexes) %in% names(z$parsedSources[[2]]$sourceDf)
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
?unique
source('B:/Data/R/rock/R/parse_source.R')
y2
bla <- list(a = 1:3, b=4:6)
bla
glue::glue_collapse(bla)
paste0(bla)
glue::glue_collapse(bla)
bla <- list(a = c(1:3, 2), b=c(4:6, 2))
paste0(bla)
glue::glue_collapse(bla)
bla
lapply(names(bla), function(x) return(glue::glue("Identifier regular expression {x} matched with identifiers {ufs::vecTxtQ(bla[[x]])}")));
glue::glue_collapse(lapply(names(bla), function(x) return(glue::glue("Identifier regular expression {x} matched with identifiers {ufs::vecTxtQ(bla[[x]])}"))))
glue::glue_collapse(lapply(names(bla), function(x) return(glue::glue("Identifier regular expression {x} matched with identifiers {ufs::vecTxtQ(bla[[x]])}"))), ", ")
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
y2
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
y2
source('B:/Data/R/rock/R/parse_source.R')
z$parsedSources[[2]]
source('B:/Data/R/rock/R/parse_source.R')
z$parsedSources[[2]]
source('B:/Data/R/rock/R/parse_source.R')
z$parsedSources[[2]]
source('B:/Data/R/rock/R/parse_source.R')
z$parsedSources[[2]]
usethis::use_vignette("introduction_to_rock");
?rENA
?
??rENA
install.packages('rENA')
?rENA
??rENA
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$deductiveCodeTree
source('B:/Data/R/rock/R/parse_sources.R')
z$metadata
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
bla$deductiveCodeList
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_source.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_source.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z
source('B:/Data/R/rock/R/parse_sources.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$parsedSources[[1]]
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
z$deductiveCodeTree
source('B:/Data/R/rock/R/codes_to_nodes.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/codes_to_nodes.R')
z <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/parse_sources.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE)
bla$deductiveCodeTree
print(bla$deductiveCodeTree, 'label')
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
bla$deductiveCodeTree
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
bla$deductiveCodeTree
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla$deductiveCodeTree
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
print(bla$deductiveCodeTree, 'label')
source('B:/Data/R/rock/R/codes_to_nodes.R')
source('B:/Data/R/rock/R/codes_to_nodes.R')
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files', silent=FALSE);
bla <- parse_sources('B:/Data/research/decentralized-construct-taxonomy/dct-files');
print(bla$deductiveCodeTree, 'label', 'code')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
length(enaTest$parsedSources)
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
names(enaTest$parsedSources)
enaTest$input$filelist
source('B:/Data/R/rock/R/parse_sources.R')
enaTest$input$filelist
enaTest
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
plot(enaTest$deductiveCodeTree)
source('B:/Data/R/rock/R/parse_sources.R')
?data.tree
source('B:/Data/R/rock/R/parse_sources.R')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/apply_graph_theme.R')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
source('B:/Data/R/rock/R/parse_sources.R')
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
DiagrammeR::render_graph(enaTest$deductiveCodeTreeGraph)
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
enaTest
enaTest <- parse_sources(path="B:/Data/research/qualitative-quantitative interfacing/Qualitative rENA/arena");
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
plot(enaTest)
source('B:/Data/R/rock/R/parse_sources.R')
plot(enaTest)
print(enaTest)
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
enaTest
sqrt(.11)
sqrt(.011)
sqrt(.011)
1/1.214
sqrt(.18)
devtools::build_site();
devtools::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
usethis::use_roxygen_md()
install.packages('roxygen2md')
devtools::document()
pkgdown::build_site()
usethis::use_gpl3_license()
R.home()
options(usethis.full_name = "Gjalt-Jorn Peters")
R.home()
usethis::use_gpl3_license()
document()
devtools::document()
pkgdown::build_site()
source('B:/Data/R/rock/R/extract_yaml_fragments.R')
source('B:/Data/R/rock/R/delete_yaml_fragments.R')
source('B:/Data/R/rock/R/delete_yaml_fragments.R')
source('B:/Data/R/rock/R/extract_yaml_fragments.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_sources.R')
source('B:/Data/R/rock/R/parse_source.R')
source('B:/Data/R/rock/R/parse_source.R')
devtools::document()
source('B:/Data/R/rock/R/parse_source.R')
devtools::document()
source('B:/Data/R/rock/R/parse_sources.R')
devtools::document()
pkgdown::build_site()
source('B:/Data/R/rock/R/parse_source.R')
pkgdown::build_site()
devtools::document()
?base::regex
?regex
devtools::document()
pkgdown::build_site()
usethis::use_git_ignore()
?usethis::use_git_ignore
usethis::use_travis()
devtools::document()
devtools::document()
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do.")
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do.", replacements = NULL))
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do."))
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source("Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."));
exampleSource <-
"Do you like icecream?
Well, that depends… Sometimes, when it's..... Nice. Then I do,
but otherwise... not really, actually."
cat(clean_source(exampleSource));
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
cat(clean_source(exampleSource,
removeNewlines=TRUE));
devtools::document()
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
devtools::document()
devtools::document()
pkgdown::build_site()
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
source('B:/Data/R/rock/R/clean_source.R', encoding = 'UTF-8')
devtools::document()
pkgdown::build_site()
