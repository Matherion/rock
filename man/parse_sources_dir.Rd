% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_sources.R
\name{parse_sources_dir}
\alias{parse_sources_dir}
\title{Extract DCT specifications from all files in a directory}
\usage{
parse_sources_dir(path, extension = "rock", regex,
  codeRegex = "\\\\[\\\\[([a-zA-Z0-9._-]+)\\\\]\\\\]",
  idRegexes = c(caseId = "\\\\[\\\\[(cid)=([a-zA-Z0-9._-]+)\\\\]\\\\]",
  stanzaId = "\\\\[\\\\[(sid)=([a-zA-Z0-9._-]+)\\\\]\\\\]"),
  autoGenerateIds = c("stanzaId"), sectionRegexes = c(paragraphs =
  "---paragraph-break---", secondary = "---<>---"),
  delimiterRegEx = "^---$", ignoreOddDelimiters = FALSE,
  encoding = "UTF-8", silent = FALSE)
}
\arguments{
\item{path}{The path from where to read the DCT files.}

\item{extension}{The extension of the file; convenient alternative to
specifying a `regex`.}

\item{regex}{A regular expression; when provided, overrides the `extension`
argument to guide file selection in the `path`.}

\item{delimiterRegEx}{The regular expression specifying how the YAML fragments
specifying the constructs are delimited. Should normally never be changed.}

\item{ignoreOddDelimiters}{Whether to ignore a final odd delimiter, if
encountered.}

\item{silent}{Whether to provide information on progress.}
}
\value{
An object of class `dctRawSpecListSet` for processing by [parse_dct_specs()].
}
\description{
This function processes all DCT specifications in a directory.
}
\details{
This function is called by [process_dir()]; it is normally not
necessary to call this function directly.
}
\examples{
\dontrun{extract_dct_dir("A:/path/to/some/directory");
}
}
